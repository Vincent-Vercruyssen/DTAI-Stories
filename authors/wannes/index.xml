<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>DTAI</title><link>https://dtai.cs.kuleuven.be/posts/authors/wannes/</link><atom:link href="https://dtai.cs.kuleuven.be/posts/authors/wannes/index.xml" rel="self" type="application/rss+xml"/><description>DTAI</description><generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><lastBuildDate>Tue, 24 Mar 2020 16:58:21 +0100</lastBuildDate><image><url>img/map[gravatar:%!s(bool=false) shape:circle]</url><title>DTAI</title><link>https://dtai.cs.kuleuven.be/posts/authors/wannes/</link></image><item><title>Time Series Clustering</title><link>https://dtai.cs.kuleuven.be/posts/post/wannes/time-series-clustering/</link><pubDate>Tue, 24 Mar 2020 16:58:21 +0100</pubDate><guid>https://dtai.cs.kuleuven.be/posts/post/wannes/time-series-clustering/</guid><description>&lt;p>Clustering is one of the most widely used techniques for time series because it allows to identify and summarize patterns that are of interest (e.g., frequent or anomalous patterns). Furthermore, it does not rely on costly human supervision of time-consuming labeling.
As a result, time series clustering has been studied for many different applications such as astronomy, biology, meteorology, medicine, finance, robotics, engineering, etc..&lt;/p>
&lt;h2 id="unsupervised-clustering-dtw">Unsupervised Clustering: DTW&lt;/h2>
&lt;p>Time series clustering is heavily dependent on the choice of the distance used to compare two series. Typically, one is interested in similarity between shapes represented by a series, irrespective of phase or amplitude. And while many distance measures have been proposed, it has been shown that distance measures that can deal with invariances to amplitude and phase perform particularly well.
One of the best performing similarity measures is Dynamic Time Warping (DTW).&lt;/p>
&lt;p>&lt;img src="dtw_warp.png" alt="DTW Warpring">&lt;/p>
&lt;p>The resulting clustering is robust against small changes between time series. As can be seen in the figure underneath, DTW allows a clustering that nicely groups similar series.&lt;/p>
&lt;p>&lt;img src="dtw_clustering.png" alt="DTW clustering">&lt;/p>
&lt;p>The toolbox is available at &lt;a href="https://github.com/wannesm/dtaidistance/">https://github.com/wannesm/dtaidistance/&lt;/a> .&lt;/p>
&lt;h2 id="semi-supervised-clustering-cobras">Semi-supervised Clustering: COBRAS&lt;/h2>
&lt;p>Clustering is ubiquitous in data analysis. There is a large diversity in algorithms, loss functions, similarity measures, etc. This is partly due to the fact that clustering is inherently subjective: in many cases, there is no single correct clustering, and different users may prefer different clusterings, depending on their goals and prior knowledge [17]. Depending on their preference, they should use the right algorithm, similarity measure, loss function, hyperparameter settings, etc. This requires a fair amount of knowledge and expertise on the user&amp;rsquo;s side.
Semi-supervised clustering methods deal with this subjectiveness in a differ- ent manner. They allow the user to specify constraints that express their subjective interests. These constraints can then guide the algorithm towards solutions that the user finds interesting. Many such systems obtain these constraints by asking the user to answer queries of the following type: should these two elements be in the same cluster? A so-called must-link constraint is obtained if the answer is yes, a cannot-link otherwise. In many situations, answering this type of questions is much easier for the user than selecting the right algorithm, defining the similarity measure, etc. Active semi-supervised clustering methods
aim to limit the number of queries that is required to obtain a good clustering by selecting informative pairs to query.
In the context of clustering time series, the subjectiveness of clustering is even more prominent. In some contexts, the time scale matters, in other contexts it does not. Similarly, the scale of the amplitude may (not) matter. One may want to cluster time series based on certain types of qualitative behavior (monotonic, periodic, &amp;hellip;), local patterns that occur in them, etc. Despite this variability, and although there is a plethora of work on time series clustering, semi-supervised clustering of time series has only very recently started receiving attention.&lt;/p>
&lt;p>&lt;img src="cobras_logo.png" alt="cobras">&lt;/p>
&lt;p>Clustering is ubiquitous in data analysis, including analysis of time series. But it is inherently subjective: different users may prefer different clusterings for a particular dataset. Semi-supervised clustering addresses this by allowing the user to provide examples of instances that should (not) be in the same cluster.&lt;/p>
&lt;p>The COBRAS-TS algorithm is a semi-supervised clustering method that can use indirect feedback from users. It clusters with the user in the loop. The user can provide indirect feedback where it is only required to tell the system for a few time series whether two time series represent the same behavior or not. As a result the COBRAS-TS system can identify clusters that are characterized by small local patterns.&lt;/p>
&lt;p>&lt;img src="img1.png" alt="img1">
&lt;img src="img2.png" alt="img2">&lt;/p>
&lt;p>An interface is provided to the user that actively asks for feedback about time series where the method is the most unsure about how to cluster them.&lt;/p>
&lt;p>&lt;img src="cobras_schema.png" alt="gui">
&lt;img src="cobras_example.png" alt="gui">&lt;/p>
&lt;p>The toolbox is available at &lt;a href="https://dtai.cs.kuleuven.be/software/cobras/">https://dtai.cs.kuleuven.be/software/cobras/&lt;/a> .&lt;/p></description></item><item><title>Anomaly Detection with User Feedback</title><link>https://dtai.cs.kuleuven.be/posts/post/wannes/anomaly_detection/</link><pubDate>Tue, 24 Mar 2020 10:36:34 +0200</pubDate><guid>https://dtai.cs.kuleuven.be/posts/post/wannes/anomaly_detection/</guid><description>&lt;p>Anomaly detection deals with situations where mostly &amp;lsquo;normal&amp;rsquo; behaviour is observed and one is interested in detecting deviations from this normal behaviour. Often negative labels, or anomalies, are not available because they are expensive (e.g. break a machine) or unknown (e.g. adversarial behaviour). Anomaly detection method typically learn from the distribution of data and a small number of labels to include expert knowledge.&lt;/p>
&lt;p>Nowadays, all aspects of a production process are continuously monitored and visualized in a dashboard. Equipment is monitored using a variety of sensors, natural resource usage is tracked, and interventions are recorded. In this context, a common task is to identify anomalous behavior from the time series data generated by sensors. As manually analyzing such data is laborious and expensive, automated approaches have the potential to be much more efficient as well as cost effective. While anomaly detection could be posed as a supervised learning problem, typically this is not possible as few or no labeled examples of anomalous behavior are available and it is oftentimes infeasible or undesirable to collect them. Therefore, unsupervised approaches are commonly employed which typically identify anomalies as deviations from normal (i.e., common or frequent) behavior. However, in many real-world settings several types of normal behavior exist that occur less frequently than some anomalous behaviors.&lt;/p>
&lt;p>The methods presented in this article are implemented as part of the
&lt;a href="https://github.com/Vincent-Vercruyssen/anomatools" target="_blank" rel="noopener">Anomatools toolbox&lt;/a>.&lt;/p>
&lt;h2 id="including-flexible-user-feedback">Including flexible user-feedback&lt;/h2>
&lt;h3 id="semi-supervised-learning">Semi-supervised learning&lt;/h3>
&lt;p>Sometimes there is some information available. For example, some labels might be known or the user can answer a few question.
An approach used in our research is a constrained-clustering-based approach for anomaly detection that works in both an unsupervised and semi-supervised setting. Starting from an unlabeled data set, the approach is able to gradually incorporate expert-provided feedback to improve its performance.&lt;/p>
&lt;p>&lt;img src="featured.png" alt="another image">&lt;/p>
&lt;p>References:&lt;/p>
&lt;ul>
&lt;li>
&lt;a href="https://people.cs.kuleuven.be/~vincent.vercruyssen/publications/2019/ECMLPKDD_conference_manuscript.pdf" target="_blank" rel="noopener">Semi-supervised Anomaly Detection with an Application to Water Analytics&lt;/a>. Vincent Vercruyssen, Wannes Meert, Gust Verbruggen, Koen Maes, Ruben BÃ¤umer, Jesse Davis. IEEE International Conference on Data Mining. Singapore, 17 November 2018.&lt;/li>
&lt;/ul>
&lt;h3 id="transfer-learning">Transfer Learning&lt;/h3>
&lt;p>References:&lt;/p>
&lt;ul>
&lt;li>
&lt;a href="https://people.cs.kuleuven.be/~vincent.vercruyssen/publications/2020/AAAI_conference_manuscript.pdf" target="_blank" rel="noopener">Transfer Learning for Anomaly Detection through Localized and Unsupervised Instance Selection&lt;/a>. Vincent Vercruyssen, Wannes Meert, Jesse Davis. Thirty-Fourth AAAI Conference on Artificial Intelligence. New York, 7 February 2020.&lt;/li>
&lt;/ul>
&lt;h2 id="types-of-patterns">Types of Patterns&lt;/h2>
&lt;h3 id="missing-patterns">Missing patterns&lt;/h3>
&lt;ul>
&lt;li>&amp;ldquo;Now you see it, now you don&amp;rsquo;t!&amp;rdquo; Detecting Suspicious Pattern Absences in Continuous Time Series. Vincent Vercruyssen, Wannes Meert, Jesse Davis. SIAM International Conference on Data Mining. Cincinnati, 7 May 2020.&lt;/li>
&lt;/ul></description></item></channel></rss>